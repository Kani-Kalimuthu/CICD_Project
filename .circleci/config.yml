  version: 2.1

  orbs:
    slack: circleci/slack@4.12.1

  commands:
    destroy_environment:
      steps:
        - run:
            name: Destroy environment
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation delete-stack --stack-name udapeople-${CIRCLE_WORKFLOW_ID:0:5}
  
    revert-migrations:
      description: Revert the last migration if successfully run in the current workflow.
      parameters:
        # Add parameter here     
      steps:
        - run:
            name: Revert migrations
            # Add when this will run
            command: |
              # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
              SUCCESS = 1
              if(( $SUCCESS==1 )); 
              then
              #  cd ~/project/backend
              #  npm install
              #  Add revert code here. You can find this in the Getting Started section.
                exit 1
              fi
  jobs:
    build-frontend:
      docker:
        - image: circleci/node:14.18.1
      steps:
        - checkout
        - restore_cache:
            keys: [frontend-build]
        - run:
            name: frontend build
            command: |
              cd frontend
              npm i
              npm run build
        - save_cache:
            paths: [frontend/node_modules]
            key: frontend-build
        - slack/notify:
            event: fail
            template: basic_fail_1
        
    build-backend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [backend-build]
        - run:
            name: Back-end build
            command: |
              cd backend
              npm i
              npm run build          
        - save_cache:
            paths: [backend/node_modules]
            key: backend-build
        - slack/notify:
            event: fail
            template: basic_fail_1
    
    test-frontend:
      docker:
        - image: circleci/node:14.18.1
      steps:
        # Checkout code from git
        - checkout 
        - restore_cache:
            keys: [frontend-test] 
        # Your job code here
        - run:
            name: frontend test
            command: |
              cd frontend
              npm i
              npm run test
              npm audit fix
        - slack/notify:
            event: fail
            template: basic_fail_1
    test-backend:
      docker:
        - image: circleci/node:14.18.1
      steps:
        # Checkout code from git
        - checkout  
        - restore_cache:
            keys: [backend-test]
        # Your job code here
        - run:
            name: backend test
            command: |
              cd backend
              npm i
              npm run test
              npm audit fix
              npm audit fix --force  
        - slack/notify:
            event: fail
            template: basic_fail_1
              
    scan-frontend:
      docker:
        - image: circleci/node:14.18.1
      steps:
        # Checkout code from git
        - checkout
        - restore_cache:
            keys: [frontend-scan] # Restore from cache
        # Your job code here
        - run:
            name: frontend audit
            command: |
              cd backend
              npm i
              npm audit fix --audit-level=critical 
        - slack/notify:
            event: fail
            template: basic_fail_1

    scan-backend:
      docker:
        - image: circleci/node:14.18.1
      steps:
        # Checkout code from git
        - checkout
        - restore_cache:
            keys: [backend-scan]
        # Your job code here
        - run:
            name: backend audit 
            command: |
              cd backend
              npm i
              npm audit fix --audit-level=critical
        - slack/notify:
            event: fail
            template: basic_fail_1
          
  workflows:
    udapeople_project:
      jobs:
        - build-frontend          
        - build-backend            
        - test-frontend:            
            requires:
              - build-frontend
        - test-backend:            
            requires:
              - build-backend
        - scan-frontend:            
            requires:
              - test-frontend
        - scan-backend:
            requires:
              - test-backend
    